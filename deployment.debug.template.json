{
  "$schema-template": "2.0.0",
  "modulesContent": {
    "$edgeAgent": {
      "properties.desired": {
        "schemaVersion": "1.0",
        "runtime": {
          "type": "docker",
          "settings": {
            "minDockerVersion": "v1.25",
            "loggingOptions": "",
            "registryCredentials": {
              "default": {
                "username": "$CONTAINER_REGISTRY_USERNAME",
                "password": "$CONTAINER_REGISTRY_PASSWORD",
                "address": "$CONTAINER_REGISTRY_ADDRESS"
              }
            }
          }
        },
        "systemModules": {
          "edgeAgent": {
            "type": "docker",
            "settings": {
              "image": "mcr.microsoft.com/azureiotedge-agent:1.0",
              "createOptions": {}
            }
          },
          "edgeHub": {
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "mcr.microsoft.com/azureiotedge-hub:1.0",
              "createOptions": {
                "HostConfig": {
                  "PortBindings": {
                    "5671/tcp": [
                      {
                        "HostPort": "5671"
                      }
                    ],
                    "8883/tcp": [
                      {
                        "HostPort": "8883"
                      }
                    ],
                    "443/tcp": [
                      {
                        "HostPort": "443"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "modules": {
          "RedisEdge": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "startupOrder": 0,
            "settings": {
              "image": "${MODULES.RedisEdge}",
              "createOptions": {
                "Hostname": "$REDIS_HOST_NAME"
              }
            }
          },
          "SimulatedTemperatureSensor": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "startupOrder": 0,
            "settings": {
              "image": "mcr.microsoft.com/azureiotedge-simulated-temperature-sensor:1.0",
              "createOptions": {}
            },
            "env": {
              "MessageCount": {
                "value": -1
              },
              "MessageDelay": {
                "value": "00:00:01"
              }
            }
          },
          "RedisTimeSeriesEdge": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "startupOrder": 1,
            "settings": {
              "image": "${MODULES.RedisTimeSeriesEdge.debug}",
              "createOptions": {
                "Hostname": "$REDIS_TIME_SERIES_EDGE_HOST_NAME"
              }
            },
            "env": {
              "REDIS_HOST_NAME": {
                "value": "$REDIS_HOST_NAME"
              }
            }
          },
          "RedisExporter": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "startupOrder": 1,
            "settings": {
              "image": "oliver006/redis_exporter",
              "createOptions": {
                "Hostname": "$REDIS_EXPORTER_HOST_NAME"
              }
            },
            "env": {
              "REDIS_ADDR": {
                "value": "redis://$REDIS_HOST_NAME:6379"
              }
            }
          },
          "Prometheus": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "startupOrder": 2,
            "settings": {
              "image": "${MODULES.Prometheus}",
              "createOptions": {
                "Hostname": "$PROMETHEUS_HOST_NAME"
              }
            }
          },
          "Grafana": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "startupOrder": 3,
            "settings": {
              "image": "${MODULES.Grafana}",
              "createOptions": {
                "HostConfig": {
                  "PortBindings": {
                    "3000/tcp": [
                      {
                        "HostPort": "3000"
                      }
                    ]
                  }
                }
              }
            }
          },
          "AzureMonitor": {
            "version": "1.0",
            "type": "docker",
            "status": "running",
            "restartPolicy": "always",
            "settings": {
              "image": "mcr.microsoft.com/azuremonitor/containerinsights/ciprod:iot-0.1.3.3",
              "createOptions": {}
            },
            "env": {
              "UploadTarget": {
                "value": "$UPLOAD_TARGET"
              },
              "LogAnalyticsWorkspaceId": {
                "value": "$LOG_ANALYTICS_WORKSPACE_ID"
              },
              "LogAnalyticsSharedKey": {
                "value": "$LOG_ANALYTICS_SHARED_KEY"
              },
              "HubResourceID": {
                "value": "$IOT_HUB_RESOURCE_ID"
              },
              "MetricsEndpointsCSV": {
                "value": "http://edgeHub:9600/metrics,http://edgeAgent:9600/metrics,http://$REDIS_EXPORTER_HOST_NAME:9121/metrics,http://$REDIS_TIME_SERIES_EDGE_HOST_NAME:9121/metrics,"
              }
            }
          }
        }
      }
    },
    "$edgeHub": {
      "properties.desired": {
        "schemaVersion": "1.0",
        "routes": {
          "sensorToRedisTimeSeriesEdge": "FROM /messages/modules/SimulatedTemperatureSensor/outputs/temperatureOutput INTO BrokeredEndpoint(\"/modules/RedisTimeSeriesEdge/inputs/input1\")",
          "RedisTimeSeriesEdgeToIoTHub": "FROM /messages/modules/RedisTimeSeriesEdge/outputs/* INTO $upstream"
        },
        "storeAndForwardConfiguration": {
          "timeToLiveSecs": 7200
        }
      }
    }
  }
}